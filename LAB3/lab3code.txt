.data
n: .word 8

.text
main:
	la t0, n
    lw a0, 0(t0)
    jal ra, factorial
    
    addi a1, a0, 0
    addi a0, x0, 1
    ecall # Print Result
    
    addi a0, x0, 10
    ecall # Exit

factorial:
 addi a1, a0, 0 // loads argument from a0 with an increment of 0 and then it is stored in a1
 beq a1, x0, else // if input argument is 1, go to else
 subi a2, a1, 1 // decrements a1 by 1, stores the value in a2
 addi a0, a2, 0 // loads a2 ina0
 jal ra, factorial // recurse
 mul a0, a1, a2 // multiplies a1 by a2 and stores it in a0
 return
else:
 addi a0, x0, 1 // a0=1
 return

